const { Telegraf, Markup } = require('telegraf');

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –±–æ—Ç–∞
const BOT_TOKEN = '8432249611:AAHWMs9ZysSoRuKVxhGdO-FE-bPP2xyWmXs';
const GROUP_ID = '-1002540229091'; // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π ID –≥—Ä—É–ø–ø—ã

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
const bot = new Telegraf(BOT_TOKEN);

// –î–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä–æ–≤ (–±–µ–∑ —Ñ–æ—Ç–æ –¥–ª—è –Ω–∞—á–∞–ª–∞)
const products = {
    seatCovers: [
        { id: 1, name: '–ß–µ—Ä–Ω–∞—è –∞–ª—å–∫–∞–Ω—Ç–∞—Ä–∞ / –ß–µ—Ä–Ω–∞—è —ç–∫–æ–∫–æ–∂–∞' },
        { id: 2, name: '–≠–∫–æ–∫–æ–∂–∞ –±–µ–ª–∞—è' },
        { id: 3, name: '–°–∏–Ω—è—è –∞–ª—å–∫–∞–Ω—Ç–∞—Ä–∞ / –ß–µ—Ä–Ω–∞—è —ç–∫–æ–∫–æ–∂–∞' },
        { id: 4, name: '–ß–µ—Ä–Ω–∞—è —ç–∫–æ–∫–æ–∂–∞ / –û—Ä–∞–Ω–∂–µ–≤–∞—è —ç–∫–æ–∫–æ–∂–∞' },
        { id: 5, name: '–¢–µ–º–Ω–æ-—Å–µ—Ä–∞—è —ç–∫–æ–∫–æ–∂–∞' },
        { id: 6, name: '–ß–µ—Ä–Ω–∞—è —ç–∫–æ–∫–æ–∂–∞ / –°–ª–æ–Ω–æ–≤–∞—è –∫–æ—Å—Ç—å —ç–∫–æ–∫–æ–∂–∞' },
        { id: 7, name: '–ß–µ—Ä–Ω–∞—è —ç–∫–æ–∫–æ–∂–∞' },
        { id: 8, name: '–ß–µ—Ä–Ω–∞—è —ç–∫–æ–∫–æ–∂–∞ / –°–µ—Ä–∞—è —ç–∫–æ–∫–æ–∂–∞' },
        { id: 9, name: '–ü–µ—Ä–µ–≤–µ—Ä–Ω—É—Ç—ã–π –±—É–≥–∞—Ç—Ç–∏' },
        { id: 10, name: '–†–æ–º–± –ª—é–∫—Å' },
        { id: 11, name: '–ê–Ω–∞–∫–æ–Ω–¥–∞ –∞–ª—å–∫–∞–Ω—Ç–∞—Ä–∞' },
        { id: 12, name: '–≠–∫—Å—Ç—Ä–∞' },
        { id: 13, name: '–ë—Ä–æ–Ω—è' },
        { id: 14, name: '–ñ—É–∫' },
        { id: 15, name: '–°—É–ø–µ—Ä —É–∑–∫–∞—è –∫–ª–∞—Å—Å–∏–∫–∞' },
        { id: 16, name: '–ê–Ω–∞–∫–æ–Ω–¥–∞ —ç–∫–æ–∫–æ–∂–∞' },
        { id: 17, name: '–ö–ª–∞—Å—Å–∏–∫–∞ –ø–æ–¥ –æ—Ä–∏–≥–∏–Ω–∞–ª' },
        { id: 18, name: '–ü–∞—É–∫ –∞–ª—å–∫–∞–Ω—Ç–∞—Ä–∞' },
        { id: 19, name: '–ì–∞–ª–æ—á–∫–∏' },
        { id: 20, name: '–ê–ª–ª–∏–≥–∞—Ç–æ—Ä' },
        { id: 21, name: '–ö–∞—Ä–∫–∞—Å–Ω—ã–µ –ü–æ–¥ –æ—Ä–∏–≥–∏–Ω–∞–ª' },
        { id: 22, name: '–ö–∞—Ä–∫–∞—Å–Ω—ã–µ —Å–æ—Ç—ã' },
        { id: 23, name: '–ö–∞—Ä–∫–∞—Å–Ω—ã–µ —Å—É–ø–µ—Ä —É–∑–∫–∞—è –∫–ª–∞—Å—Å–∏–∫–∞' },
        { id: 24, name: '–ö–∞—Ä–∫–∞—Å–Ω—ã–µ —Ä–æ–º–±—ã' },
    ],
    carMats: [
        { id: 25, name: '–≠–∫–æ–∫–æ–∂–∞ + –≤–æ—Ä—Å –ø—Ä–µ–º–∏—É–º' },
        { id: 26, name: '–≠–∫–æ–∫–æ–∂–∞ + –ï–≤–∞' },
        { id: 27, name: '–ö–æ–≤—Ä–∏–∫–∏ –≤ –±–∞–≥–∞–∂–Ω–∏–∫' },
        { id: 28, name: '–¶–≤–µ—Ç–∞ –Ω–∞ –≤—ã–±–æ—Ä - 13000 –∫–æ–º–ø–ª–µ–∫—Ç' }
    ]
};

// –¢–µ–∫—Å—Ç—ã –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
const infoTexts = {
    about: `üè≠ –û –ö–û–ú–ü–ê–ù–ò–ò AutoA—Ç–µ–ª—åe

–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–µ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ –∞–≤—Ç–æ—á–µ—Ö–ª–æ–≤ –∏ –∞–≤—Ç–æ–∫–æ–≤—Ä–æ–≤ —Å 2010 –≥–æ–¥–∞.

–ù–∞—à–∏ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:
‚úÖ –°–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–µ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ
‚úÖ –ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã
‚úÖ –ì–∞—Ä–∞–Ω—Ç–∏—è 1 –≥–æ–¥
‚úÖ –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –ø–æ–¥—Ö–æ–¥
‚úÖ –î–æ—Å—Ç–∞–≤–∫–∞ –ø–æ –≤—Å–µ–π –†–æ—Å—Å–∏–∏

–ú—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ–ª—å–∫–æ –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã: —ç–∫–æ–∫–æ–∂–∞, –∞–ª—å–∫–∞–Ω—Ç–∞—Ä–∞, –ø—Ä–µ–º–∏–∞–ª—å–Ω—ã–µ —Ç–∫–∞–Ω–∏.`,

    installation: `üîß –£–°–¢–ê–ù–û–í–ö–ê –ê–í–¢–û–ß–ï–•–õ–û–í

–ü—Ä–æ—Ü–µ—Å—Å —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø—Ä–æ—Å—Ç –∏ –ø–æ–Ω—è—Ç–µ–Ω:

1. –ù–∞—á–Ω–∏—Ç–µ —Å –ø–µ—Ä–µ–¥–Ω–µ–≥–æ —Å–∏–¥–µ–Ω–∏—è –≤–æ–¥–∏—Ç–µ–ª—è
2. –ê–∫–∫—É—Ä–∞—Ç–Ω–æ –Ω–∞–¥–µ–Ω—å—Ç–µ —á–µ—Ö–æ–ª –Ω–∞ —Å–∏–¥–µ–Ω—å–µ
3. –ó–∞–∫—Ä–µ–ø–∏—Ç–µ –ª–∏–ø—É—á–∫–∏ –∏ –∫—Ä—é—á–∫–∏
4. –†–∞—Å–ø—Ä–∞–≤—å—Ç–µ –º–∞—Ç–µ—Ä–∏–∞–ª
5. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –¥–ª—è –¥—Ä—É–≥–∏—Ö —Å–∏–¥–µ–Ω–∏–π

‚ö†Ô∏è –í–ê–ñ–ù–û: –ü—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ –ø–æ–¥—É—à–µ–∫ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —à–≤—ã –Ω–µ –º–µ—à–∞—é—Ç –∏—Ö —Ä–∞–±–æ—Ç–µ.

–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å? –ó–∞–∫–∞–∂–∏—Ç–µ –±–µ—Å–ø–ª–∞—Ç–Ω—É—é –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é!`,

    payment: `üí∞ –û–ü–õ–ê–¢–ê –ò –î–û–°–¢–ê–í–ö–ê

üöö –°–ü–û–°–û–ë–´ –î–û–°–¢–ê–í–ö–ò:
‚Ä¢ –ö—É—Ä—å–µ—Ä–æ–º –ø–æ –í–ª–∞–¥–∏–º–∏—Ä—Å–∫–æ–π –æ–±–ª–∞—Å—Ç–∏ - 400 ‚ÇΩ
‚Ä¢ –°–∞–º–æ–≤—ã–≤–æ–∑ (–í–ª–∞–¥–∏–º–∏—Ä, –ú–æ—Å–∫–≤–∞) - –ë–ï–°–ü–õ–ê–¢–ù–û
‚Ä¢ –¢–ö "–ü–≠–ö", "–î–µ–ª–æ–≤—ã–µ –ª–∏–Ω–∏–∏" - –ø–æ —Ç–∞—Ä–∏—Ñ–∞–º
‚Ä¢ –ü–æ—á—Ç–∞ –†–æ—Å—Å–∏–∏ - –ø–æ —Ç–∞—Ä–∏—Ñ–∞–º

üí≥ –°–ü–û–°–û–ë–´ –û–ü–õ–ê–¢–´:
‚Ä¢ –ù–∞–ª–∏—á–Ω—ã–º–∏ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏
‚Ä¢ –ü–µ—Ä–µ–≤–æ–¥ –Ω–∞ –∫–∞—Ä—Ç—É –°–±–µ—Ä–±–∞–Ω–∫–∞
‚Ä¢ –ù–∞–ª–æ–∂–µ–Ω–Ω—ã–π –ø–ª–∞—Ç–µ–∂
‚Ä¢ –û–Ω–ª–∞–π–Ω-–æ–ø–ª–∞—Ç–∞

üéØ –ì–ê–†–ê–ù–¢–ò–Ø: 1 –≥–æ–¥ –Ω–∞ –≤—Å—é –ø—Ä–æ–¥—É–∫—Ü–∏—é!`
};

// –ú–µ–Ω—é
const mainMenu = Markup.keyboard([
    ['üöó –ê–≤—Ç–æ—á–µ—Ö–ª—ã', 'üõí –ê–≤—Ç–æ–∫–æ–≤—Ä—ã'],
    ['‚ÑπÔ∏è –û –Ω–∞—Å', 'üîß –£—Å—Ç–∞–Ω–æ–≤–∫–∞'],
    ['üí∞ –û–ø–ª–∞—Ç–∞ –∏ –¥–æ—Å—Ç–∞–≤–∫–∞', 'üìû –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è']
]).resize();

const backButton = Markup.keyboard(['‚¨ÖÔ∏è –ù–∞–∑–∞–¥']).resize();

// –•—Ä–∞–Ω–∏–ª–∏—â–µ —Å–æ—Å—Ç–æ—è–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
const userStates = new Map();

// –§—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑–∞ —Ç–æ–≤–∞—Ä–æ–≤
async function showProducts(ctx, productType, categoryName) {
    const productsList = products[productType];
    
    let message = `üì¶ ${categoryName}\n\n`;
    
    productsList.forEach((product, index) => {
        message += `${index + 1}. ${product.name}\n`;
    });
    
    message += `\n–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–≤–∞—Ä –¥–ª—è –∑–∞–∫–∞–∑–∞:`;
    
    // –°–æ–∑–¥–∞–µ–º inline-–∫–Ω–æ–ø–∫–∏ –¥–ª—è —Ç–æ–≤–∞—Ä–æ–≤
    const buttons = productsList.map(product => 
        [Markup.button.callback(product.name, `product_${productType}_${product.id}`)]
    );
    
    buttons.push([Markup.button.callback('‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é', 'back_to_menu')]);
    
    await ctx.reply(message, Markup.inlineKeyboard(buttons));
}

// –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–∫–∞–∑–∞
async function processOrder(ctx, productType, productId) {
    const productsList = products[productType];
    const product = productsList.find(p => p.id === productId);
    
    if (!product) {
        await ctx.reply('–¢–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω', mainMenu);
        return;
    }

    userStates.set(ctx.from.id, {
        step: 'order_phone',
        productType: productType,
        productId: productId,
        productName: product.name
    });

    await ctx.reply(
        `üõí –í–´–ë–†–ê–ù –¢–û–í–ê–†:\n${product.name}\n\nüì± –í–≤–µ–¥–∏—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–ª—è —Å–≤—è–∑–∏:`,
        Markup.removeKeyboard()
    );
}

// –§—É–Ω–∫—Ü–∏—è –Ω–∞—á–∞–ª–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏
function startConsultation(ctx) {
    userStates.set(ctx.from.id, { step: 'consultation_name' });
    ctx.reply('üë§ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –§–ò–û:', Markup.removeKeyboard());
}

// –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –ö–û–ú–ê–ù–î

// –ö–æ–º–∞–Ω–¥–∞ /start
bot.start(async (ctx) => {
    console.log(`üë§ –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${ctx.from.first_name} (ID: ${ctx.from.id})`);
    await ctx.reply(
        `üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ <b>AutoA—Ç–µ–ª—åe</b>!\n\n` +
        `–ú—ã –ø—Ä–æ–∏–∑–≤–æ–¥–∏–º –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –∞–≤—Ç–æ—á–µ—Ö–ª—ã –∏ –∞–≤—Ç–æ–∫–æ–≤—Ä—ã —Å –¥–æ—Å—Ç–∞–≤–∫–æ–π –ø–æ –≤—Å–µ–π –†–æ—Å—Å–∏–∏.\n\n` +
        `–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π —Ä–∞–∑–¥–µ–ª:`,
        { 
            parse_mode: 'HTML',
            ...mainMenu 
        }
    );
});

// –ö–æ–º–∞–Ω–¥–∞ /help
bot.help(async (ctx) => {
    await ctx.reply(
        `‚ÑπÔ∏è <b>–ü–û–ú–û–©–¨ –ü–û –ë–û–¢–£</b>\n\n` +
        `‚Ä¢ <b>üöó –ê–≤—Ç–æ—á–µ—Ö–ª—ã</b> - –∫–∞—Ç–∞–ª–æ–≥ –∞–≤—Ç–æ—á–µ—Ö–ª–æ–≤\n` +
        `‚Ä¢ <b>üõí –ê–≤—Ç–æ–∫–æ–≤—Ä—ã</b> - –∫–∞—Ç–∞–ª–æ–≥ –∞–≤—Ç–æ–∫–æ–≤—Ä–æ–≤\n` +
        `‚Ä¢ <b>‚ÑπÔ∏è –û –Ω–∞—Å</b> - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–º–ø–∞–Ω–∏–∏\n` +
        `‚Ä¢ <b>üîß –£—Å—Ç–∞–Ω–æ–≤–∫–∞</b> - –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ —É—Å—Ç–∞–Ω–æ–≤–∫–µ\n` +
        `‚Ä¢ <b>üí∞ –û–ø–ª–∞—Ç–∞ –∏ –¥–æ—Å—Ç–∞–≤–∫–∞</b> - —É—Å–ª–æ–≤–∏—è –¥–æ—Å—Ç–∞–≤–∫–∏\n` +
        `‚Ä¢ <b>üìû –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è</b> - –±–µ—Å–ø–ª–∞—Ç–Ω–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è\n\n` +
        `–î–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É "‚¨ÖÔ∏è –ù–∞–∑–∞–¥"`,
        { parse_mode: 'HTML', ...mainMenu }
    );
});

// –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –ö–ù–û–ü–û–ö –ú–ï–ù–Æ

bot.hears('üöó –ê–≤—Ç–æ—á–µ—Ö–ª—ã', async (ctx) => {
    await showProducts(ctx, 'seatCovers', '–ê–í–¢–û–ß–ï–•–õ–´');
});

bot.hears('üõí –ê–≤—Ç–æ–∫–æ–≤—Ä—ã', async (ctx) => {
    await showProducts(ctx, 'carMats', '–ê–í–¢–û–ö–û–í–†–´');
});

bot.hears('‚ÑπÔ∏è –û –Ω–∞—Å', async (ctx) => {
    await ctx.reply(infoTexts.about, backButton);
});

bot.hears('üîß –£—Å—Ç–∞–Ω–æ–≤–∫–∞', async (ctx) => {
    await ctx.reply(infoTexts.installation, backButton);
});

bot.hears('üí∞ –û–ø–ª–∞—Ç–∞ –∏ –¥–æ—Å—Ç–∞–≤–∫–∞', async (ctx) => {
    await ctx.reply(infoTexts.payment, backButton);
});

bot.hears('üìû –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è', async (ctx) => {
    startConsultation(ctx);
});

bot.hears('‚¨ÖÔ∏è –ù–∞–∑–∞–¥', async (ctx) => {
    userStates.delete(ctx.from.id);
    await ctx.reply('üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:', mainMenu);
});

// –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò INLINE-–ö–ù–û–ü–û–ö

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —Ç–æ–≤–∞—Ä–∞
bot.action(/product_(seatCovers|carMats)_(\d+)/, async (ctx) => {
    await ctx.answerCbQuery();
    const [, productType, productId] = ctx.match;
    await processOrder(ctx, productType, parseInt(productId));
});

// –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é"
bot.action('back_to_menu', async (ctx) => {
    await ctx.answerCbQuery();
    await ctx.deleteMessage();
    await ctx.reply('üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:', mainMenu);
});

// –û–ë–†–ê–ë–û–¢–ö–ê –¢–ï–ö–°–¢–û–í–´–• –°–û–û–ë–©–ï–ù–ò–ô (—Ñ–æ—Ä–º—ã)
bot.on('text', async (ctx) => {
    const userId = ctx.from.id;
    const userText = ctx.message.text;
    const state = userStates.get(userId);

    // –ï—Å–ª–∏ –Ω–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –º–µ–Ω—é
    if (!state) {
        await ctx.reply('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é:', mainMenu);
        return;
    }

    try {
        // –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è - —à–∞–≥ 1: –§–ò–û
        if (state.step === 'consultation_name') {
            state.name = userText;
            state.step = 'consultation_phone';
            await ctx.reply('üì± –¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:');
            
        // –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è - —à–∞–≥ 2: –¢–µ–ª–µ—Ñ–æ–Ω
        } else if (state.step === 'consultation_phone') {
            state.phone = userText;
            state.step = 'consultation_question';
            await ctx.reply('‚ùî –û–ø–∏—à–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å –∏–ª–∏ –ø—Ä–æ–±–ª–µ–º—É:');
            
        // –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è - —à–∞–≥ 3: –í–æ–ø—Ä–æ—Å
        } else if (state.step === 'consultation_question') {
            state.question = userText;

            // –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞—è–≤–∫–∏ –≤ –≥—Ä—É–ø–ø—É
            const consultationMessage = 
                `üìû <b>–ù–û–í–ê–Ø –ó–ê–Ø–í–ö–ê –ù–ê –ö–û–ù–°–£–õ–¨–¢–ê–¶–ò–Æ</b>\n\n` +
                `üë§ <b>–§–ò–û:</b> ${state.name}\n` +
                `üì± <b>–¢–µ–ª–µ—Ñ–æ–Ω:</b> ${state.phone}\n` +
                `‚ùì <b>–í–æ–ø—Ä–æ—Å:</b> ${state.question}\n` +
                `üë§ <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:</b> @${ctx.from.username || ctx.from.first_name}\n` +
                `üÜî <b>ID:</b> ${userId}`;

            await bot.telegram.sendMessage(GROUP_ID, consultationMessage, { parse_mode: 'HTML' });
            
            await ctx.reply(
                '‚úÖ <b>–°–ø–∞—Å–∏–±–æ! –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞.</b>\n\n' +
                '–ù–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è –¥–ª—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏.',
                { parse_mode: 'HTML', ...mainMenu }
            );
            userStates.delete(userId);
            
        // –ó–∞–∫–∞–∑ —Ç–æ–≤–∞—Ä–∞ - —à–∞–≥: –¢–µ–ª–µ—Ñ–æ–Ω
        } else if (state.step === 'order_phone') {
            const phone = userText;
            const productName = state.productName;
            const productType = state.productType === 'seatCovers' ? '–ê–≤—Ç–æ—á–µ—Ö–ª—ã' : '–ê–≤—Ç–æ–∫–æ–≤—Ä—ã';

            // –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–∫–∞–∑–∞ –≤ –≥—Ä—É–ø–ø—É
            const orderMessage = 
                `üõí <b>–ù–û–í–´–ô –ó–ê–ö–ê–ó</b>\n\n` +
                `üì¶ <b>–ö–∞—Ç–µ–≥–æ—Ä–∏—è:</b> ${productType}\n` +
                `üè∑Ô∏è <b>–¢–æ–≤–∞—Ä:</b> ${productName}\n` +
                `üì± <b>–¢–µ–ª–µ—Ñ–æ–Ω:</b> ${phone}\n` +
                `üë§ <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:</b> @${ctx.from.username || ctx.from.first_name}\n` +
                `üÜî <b>ID:</b> ${userId}`;

            await bot.telegram.sendMessage(GROUP_ID, orderMessage, { parse_mode: 'HTML' });
            
            await ctx.reply(
                '‚úÖ <b>–°–ø–∞—Å–∏–±–æ! –í–∞—à –∑–∞–∫–∞–∑ –ø—Ä–∏–Ω—è—Ç.</b>\n\n' +
                '–ù–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π –∑–∞–∫–∞–∑–∞.',
                { parse_mode: 'HTML', ...mainMenu }
            );
            userStates.delete(userId);
        }
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è:', error);
        await ctx.reply(
            '‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.',
            mainMenu
        );
        userStates.delete(userId);
    }
});

// –û–ë–†–ê–ë–û–¢–ö–ê –û–®–ò–ë–û–ö
bot.catch((err, ctx) => {
    console.error('‚ùå –û—à–∏–±–∫–∞ –±–æ—Ç–∞:', err);
    console.error('–ö–æ–Ω—Ç–µ–∫—Å—Ç –æ—à–∏–±–∫–∏:', ctx);
});

// –ó–ê–ü–£–°–ö –ë–û–¢–ê
async function startBot() {
    try {
        console.log('üü° –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ AutoA—Ç–µ–ª—åe...');
        
        // –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
        const botInfo = await bot.telegram.getMe();
        console.log(`üü¢ –ë–æ—Ç @${botInfo.username} —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á–µ–Ω!`);
        
        // –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
        await bot.launch();
        console.log('üöÄ –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!');
        console.log('üì± –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –±–æ—Ç–∞ –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ /start –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã');
        
    } catch (error) {
        console.error('üî¥ –û–®–ò–ë–ö–ê –ó–ê–ü–£–°–ö–ê –ë–û–¢–ê:', error.message);
        console.log('\nüí° –í–û–ó–ú–û–ñ–ù–´–ï –ü–†–ò–ß–ò–ù–´:');
        console.log('1. –ù–µ–≤–µ—Ä–Ω—ã–π —Ç–æ–∫–µ–Ω –±–æ—Ç–∞');
        console.log('2. –ü—Ä–æ–±–ª–µ–º—ã —Å –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ–º');
        console.log('3. –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ Telegram –≤ –≤–∞—à–µ–º —Ä–µ–≥–∏–æ–Ω–µ');
        console.log('4. –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Ç–æ–∫–µ–Ω–∞');
        
        process.exit(1);
    }
}

// –û–ë–†–ê–ë–û–¢–ö–ê –ó–ê–í–ï–†–®–ï–ù–ò–Ø –†–ê–ë–û–¢–´
process.once('SIGINT', () => {
    console.log('\nüõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞...');
    bot.stop('SIGINT');
    process.exit(0);
});

process.once('SIGTERM', () => {
    console.log('\nüõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞...');
    bot.stop('SIGTERM');
    process.exit(0);
});

// –ó–ê–ü–£–°–ö –ü–†–û–ì–†–ê–ú–ú–´
console.log('ü§ñ AutoA—Ç–µ–ª—åe Bot - Starting...');
startBot();